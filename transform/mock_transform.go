// Code generated by MockGen. DO NOT EDIT.
// Source: ./transform/transform.go

// Package transform is a generated GoMock package.
package transform

import (
	reflect "reflect"

	datastructures "github.com/companieshouse/elasticsearch-data-loader/datastructures"
	gomock "github.com/golang/mock/gomock"
)

// MockTransformer is a mock of Transformer interface.
type MockTransformer struct {
	ctrl     *gomock.Controller
	recorder *MockTransformerMockRecorder
}

// MockTransformerMockRecorder is the mock recorder for MockTransformer.
type MockTransformerMockRecorder struct {
	mock *MockTransformer
}

// NewMockTransformer creates a new mock instance.
func NewMockTransformer(ctrl *gomock.Controller) *MockTransformer {
	mock := &MockTransformer{ctrl: ctrl}
	mock.recorder = &MockTransformerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransformer) EXPECT() *MockTransformerMockRecorder {
	return m.recorder
}

// GetCompanyNames mocks base method.
func (m *MockTransformer) GetCompanyNames(companies *[]*datastructures.MongoCompany, length int) []datastructures.CompanyName {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCompanyNames", companies, length)
	ret0, _ := ret[0].([]datastructures.CompanyName)
	return ret0
}

// GetCompanyNames indicates an expected call of GetCompanyNames.
func (mr *MockTransformerMockRecorder) GetCompanyNames(companies, length interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCompanyNames", reflect.TypeOf((*MockTransformer)(nil).GetCompanyNames), companies, length)
}

// TransformMongoCompanyToEsCompany mocks base method.
func (m *MockTransformer) TransformMongoCompanyToEsCompany(mongoCompany *datastructures.MongoCompany, alphaKey *datastructures.AlphaKey) *datastructures.EsCompany {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransformMongoCompanyToEsCompany", mongoCompany, alphaKey)
	ret0, _ := ret[0].(*datastructures.EsCompany)
	return ret0
}

// TransformMongoCompanyToEsCompany indicates an expected call of TransformMongoCompanyToEsCompany.
func (mr *MockTransformerMockRecorder) TransformMongoCompanyToEsCompany(mongoCompany, alphaKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransformMongoCompanyToEsCompany", reflect.TypeOf((*MockTransformer)(nil).TransformMongoCompanyToEsCompany), mongoCompany, alphaKey)
}
